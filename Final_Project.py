import streamlit as st
import pandas as pd
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
df = pd.read_excel(r"Coca-Cola_6Mdaily.xlsx")

# ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà
df.columns = ["Date", "Price", "Open", "High", "Low", "Vol.", "Change%", "NYSE Index"]

# ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Date ‡πÄ‡∏õ‡πá‡∏ô datetime ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡∏•‡∏ö‡πÄ‡∏ß‡∏•‡∏≤)
df["Date"] = pd.to_datetime(df["Date"], format="%m/%d/%Y", errors="coerce").dt.date

# ‡∏ï‡∏±‡πâ‡∏á index ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 1 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
df.index = range(1, len(df) + 1)

# ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ NaN
df = df.dropna()

# ‡πÄ‡∏û‡∏¥‡πà‡∏° CSS ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î/‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î
st.markdown(
    """
    <style>
    .dataframe {
        width: 900px !important;  # ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏≤‡∏ü (12 ‡∏ô‡∏¥‡πâ‡∏ß * 72 ‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•)
        overflow-x: auto;
        margin: 0 auto;  # ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á
    }
    .max-box {
        background-color: #e6ffed;  # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î
        padding: 10px;  # ‡∏•‡∏î padding ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á
        border-radius: 5px;
        text-align: center;
        margin-right: 10px;
        font-size: 14px;  # ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    }
    .min-box {
        background-color: #ffe6e6;  # ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏≠‡πà‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î
        padding: 10px;  # ‡∏•‡∏î padding ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á
        border-radius: 5px;
        text-align: center;
        margin-left: 10px;
        font-size: 14px;  # ‡∏•‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    }
    h4 { font-size: 16px; }  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
    h2 { font-size: 20px; }  # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏≤‡∏Ñ‡∏≤
    p { font-size: 12px; }   # ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞ % ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
    .text {
        font-size: 16px;
        text-align: center;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á dropdown menu ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
st.title("üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô Coca-Cola")

# ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î
st.markdown(
    '<p class="text">***‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏Å‡∏∏‡∏•‡πÄ‡∏á‡∏¥‡∏ô USD (US Dollars)</p>',
    unsafe_allow_html=True
)

time_period = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á:", ["1 Week", "2 Weeks", "1 Month", "3 Months", "6 Months"])

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
if time_period == "1 Week":
    df_filtered = df.head(7)  
elif time_period == "2 Weeks":
    df_filtered = df.head(14)
elif time_period == "1 Month":
    df_filtered = df.head(30)    
elif time_period == "3 Months":
    df_filtered = df.head(90)
else:  # 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    df_filtered = df.head(180)  # ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (30 ‡∏ß‡∏±‡∏ô x 6)

# ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï index ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å 1 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á
df_filtered.index = range(1, len(df_filtered) + 1)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü
matplotlib.rcParams['font.family'] = 'DejaVu Sans'
df_sorted = df_filtered.sort_values("Date")

# ‡πÅ‡∏õ‡∏•‡∏á Date ‡πÄ‡∏õ‡πá‡∏ô ordinal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Linear Regression
X = pd.to_datetime(df_sorted["Date"]).map(pd.Timestamp.toordinal).values.reshape(-1, 1)
y = df_sorted["Price"].values

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ü‡∏¥‡∏ï‡πÇ‡∏°‡πÄ‡∏î‡∏•
if len(X) > 0:
    model = LinearRegression()
    model.fit(X, y)
    trend = model.predict(X)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    st.subheader(f"‡∏Å‡∏£‡∏≤‡∏ü {time_period} ‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏ô Coca-Cola")
    plt.figure(figsize=(12, 6))
    plt.plot(pd.to_datetime(df_sorted["Date"]), y, label="Actual Closing Price")
    plt.plot(pd.to_datetime(df_sorted["Date"]), trend, label="Trend (Linear Regression)", linestyle="--", color="red")
    plt.title(f"Coca-Cola LineChart ({time_period})")
    plt.xlabel("Date")
    plt.ylabel("Closing Price (USD)")
    plt.legend()
    plt.grid(True)
    plt.tight_layout()

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Streamlit
    st.pyplot(plt)
else:
    st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
max_price_row = df_filtered[df_filtered["Price"] == df_filtered["Price"].max()]
min_price_row = df_filtered[df_filtered["Price"] == df_filtered["Price"].min()]

max_price = max_price_row["Price"].iloc[0]
max_date = max_price_row["Date"].iloc[0]
max_change = max_price_row["Change%"].iloc[0]

min_price = min_price_row["Price"].iloc[0]
min_date = min_price_row["Date"].iloc[0]
min_change = min_price_row["Change%"].iloc[0]

# ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á (‡πÉ‡∏ï‡πâ‡∏Å‡∏£‡∏≤‡∏ü)
col1, col2 = st.columns(2)

with col1:
    st.markdown(
        f"""
        <div class="max-box">
            <h4>‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏£‡∏≠‡∏ö {time_period}</h4>
            <h2>${max_price:.2f}</h2>
            <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {max_date}</p>
            <p>‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á {max_change:.2f}%</p>
        </div>
        """,
        unsafe_allow_html=True
    )

with col2:
    st.markdown(
        f"""
        <div class="min-box">
            <h4>‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏£‡∏≠‡∏ö {time_period}</h4>
            <h2>${min_price:.2f}</h2>
            <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {min_date}</p>
            <p>‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á {min_change:.2f}%</p>
        </div>
        """,
        unsafe_allow_html=True
    )

# ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
st.subheader(f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á {time_period}")
st.dataframe(df_filtered)

# ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î
st.subheader("‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏∏‡πâ‡∏ô Coca-Cola (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)")
st.write(df["Price"].describe())
